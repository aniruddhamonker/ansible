---
- hosts: node11
  vars:
    output_file: "/tmp/{{ ansible_hostname }}"
    tail_log_lines: 300
    kafka_log_dir: "/var/log/kafka/"
  tasks:
    - name: create output file on ansible control node
      file:
        path: "{{ output_file }}"
        state: touch
      tags:
        - Output

    - block:
        - name: get system facts
          setup:
            filter: "*{{ item }}*"
          with_items:
            - dist
            - ip
            - kernel
            - ansible_eth
          register: system_facts
        - name: write system facts to output file
          blockinfile:
            path: "{{ output_file }}"
            block: "{{ system_facts | to_nice_json }}"
            marker: "{mark} SYSTEM FACTS"
      tags:
        - SystemFacts

    - block:
        - name: Check for Hugepages
          shell: "{{ item }}"
          with_items:
            - cat /proc/sys/vm/nr_hugepages
            - cat /proc/meminfo | grep Huge
          register: huge_pages
          tags: HugePages
        - name: Check for Transparent Huge Pages(THP)
          shell: "{{ item }}"
          with_items:
            - cat /sys/kernel/mm/transparent_hugepage/enabled
            - grep AnonHuge /proc/meminfo
            - >
              grep -e AnonHugePages /proc/*/smaps | 
              awk '{ if($2>4) print $0} ' | 
              awk -F "/" '{print $0; system("ps -fp" $3)}'
          register: thp
          tags: Thp
    
    - block:
        - name: Check for CPU stuck events in the syslog
          shell: "egrep -i 'soft.*lock' /var/log/syslog"
          register: cpu_soft_lock
        - name: Print errors if any soft lockup messages are found
          debug:
            msg: |
              CPU stuck logs reported on {{ ansible_hostname }}
              "{{ cpu_soft_lock.stdout }}"
          when: cpu_soft_lock.stdout is regex("CPU.*stuck")
      tags: CpuSoftLocks

    - block:
        - name: Check Kafka runtime parameters
          shell: >
            ps aux | 
            grep kafka | 
            grep -v grep | 
            awk -F'-XX' '{for(i=1; i<=NF; i++)print $i}' | 
            awk '{print $1}'
          register: kafka_runtime
        - name: Collect Kafka Garbage Collector events
          shell: tail -"{{ tail_log_lines }}" "{{ kafka_log_dir }}"kafkaServer-gc.log
          register: kafka_gc_logs 
      tags: kafka

    - name: Saving tasks output to "{{ output_file }}"
      blockinfile:
        path: "{{ output_file }}"
        block: "{{ item.stdout }}"
        marker_begin: "\n BEGIN {{ item.cmd }} {{ item.start }}\n"
      with_items:
        - "{{ huge_pages.results }}"
        - "{{ thp.results }}"
        - "{{ kafka_runtime }}"
        - "{{ kafka_gc_logs }}"
      tags: kafka 
   

